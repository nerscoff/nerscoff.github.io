---
import App from '../components/App.astro'
import Card from '@/components/Card'
import { Carousel } from '@/components/Carousel'
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

const wrap = async (o: Record<string, () => Promise<unknown>>) => {
  return (
    (await Promise.all(
      Object.entries(o)
        .sort(([a], [b]) => parseInt(a) - parseInt(b))
        .map(([_, promise]) => promise()),
    )) as unknown as { default: ImageMetadata }[]
  ).map(data => data.default)
}

const wrapTitle = (o: Record<string, () => Promise<unknown>>) => {
  return Object.fromEntries(
    Object.entries(o)
      .sort(([a], [b]) => parseInt(a) - parseInt(b))
      .map(([fileName, image]) => {
        fileName = fileName.split('/').at(-1)!
        const int = parseInt(fileName)
        fileName = fileName.substring(isFinite(int) ? String(int).length + 1 : 0)
        fileName = fileName
          .split('-')
          .map(word => {
            return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()
          })
          .join(' ')
        fileName = fileName.substring(0, fileName.lastIndexOf('.'))

        return [fileName, image() as unknown as ImageMetadata]
      }),
  )
}

const galery = await wrap(import.meta.glob('/src/assets/galery/*.jpg'))
const arabica = wrapTitle(import.meta.glob('/src/assets/arabica/*.jpg'))
const bottles = wrapTitle(import.meta.glob('/src/assets/botol/*.jpg'))
---

<App title="Nerscoff" description="Nerscoff Coffee">
  <Carousel client:load images={galery} />

  <div class="bg-slate-50 p-4 py-16 lg:px-0">
    <div class="mx-auto max-w-5xl">
      <div class="mb-6">
        <h2 class="text-center text-3xl font-bold lg:text-start">Our Beans</h2>
      </div>

      <div class="grid grid-cols-1 gap-8 lg:grid-cols-2">
        {
          Object.entries(arabica).map(([title, image], index, array) => {
            const isOdd = index % 2 === 0
            const isLast = index === array.length - 1

            return (
              <div class={isOdd && isLast ? 'flex lg:col-span-2' : undefined}>
                <Card
                  client:load
                  title={title}
                  className={
                    'h-[600px] overflow-hidden rounded-md transition-[shadow_transform] hover:scale-[102%] hover:shadow-lg' +
                    (isOdd && isLast ? ' lg:mx-auto lg:w-[calc(50%-var(--spacing)*4)]' : '')
                  }
                >
                  <Image src={image} alt={title} class="block h-full w-full object-cover" />
                </Card>
              </div>
            )
          })
        }
      </div>
    </div>
  </div>

  <div class="bg-slate-50 p-4 py-16 lg:px-0">
    <div class="mx-auto max-w-5xl">
      <div class="mb-6">
        <h2 class="text-center text-3xl font-bold lg:text-start">Kopi Susu Botolan</h2>
      </div>

      <div class="grid grid-cols-1 gap-8 lg:grid-cols-2">
        {
          Object.entries(bottles).map(([title, image], index, array) => {
            const isOdd = index % 2 === 0
            const isLast = index === array.length - 1

            return (
              <div class={isOdd && isLast ? 'flex lg:col-span-2' : undefined}>
                <Card
                  client:load
                  title={title}
                  className={
                    'h-[600px] overflow-hidden rounded-md transition-[shadow_transform] hover:scale-[102%] hover:shadow-lg' +
                    (isOdd && isLast ? ' lg:mx-auto lg:w-[calc(50%-var(--spacing)*4)]' : '')
                  }
                >
                  <Image src={image} alt={title} class="block h-full w-full object-cover" />
                </Card>
              </div>
            )
          })
        }
      </div>
    </div>
  </div>
</App>
